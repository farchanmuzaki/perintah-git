langkag-lagkah penggunaan git

----------cek keberadaan git---------------
git //melihat terinstal atau tidak pada os
git --version    //melihat versi git

-----------membuat repo lokal--------------
1. buka gitbash/cmd
2. buat repo dengan manual melalui desktop/document
3. buat repo menggunakan gitbash :
    1. ketik cd dekstop(atau bisa dimanapun)
    2. ketik mkdir nama-repo
    3. ketik ls //untuk melihat folder yang sudah kita buat
    4. ketik cd nama-repo //masuk ke repo yg sudah kita buat
4. ketik git init //untuk menmbuat inisialisasi folder repo
5. cek pada properties folder repo yg suda kita inisialisasi dengan :
    1. masuk ke folder nama-repo yg sudah kita buat pilih option //folder repo nama-repo yang sudah kita inisial 
    2. klik pada bagian radio buttom show hiden file - maka akan muncul folder git didalam folder repo nama-repo


------------------Fungsi Perinta Dasar GIT------------------

git config
Salah satu perintah git yang paling banyak digunakan adalah git config, yang bisa digunakan untuk mengatur konfigurasi tertentu sesuai keinginan pengguna, seperti email, algoritma untuk diff, username, format file, dll. Contohnya, perintah berikut bisa digunakan untuk mengatur email:
exmp : git config --global user.email sam@google.com 

git init
Perintah ini digunakan untuk membuat repositori baru. Caranya:
exmp : git init

git add
Perintah git add bisa digunakan untuk menambahkan file ke index. Contohnya, perintah berikut ii akan menambahkan file bernama temp.txt yang ada di direktori lokal ke index:
exmp : git add contoh.txt atau git add . //untuk semua file 

git clone
Perintah git clone digunakan untuk checkout repositori. Jia repositori berada di remove server, gunakan:
exmp : git clone alex@93.188.160.58:/path/to/repository

Jika salinan repositori lokal ingin dibuat, gunakan:
exmp : git clone /path/to/repository

git commit
Perintah git commit digunakan untuk melakukan commit pada perubahan ke head. Ingat bahwa perubahan apapun yang di-commit tidak akan langsung ke remote repository. Gunakan:
exmp : git commit –m “Isi dengan keterangan untuk commit”

git status
Perintah git status menampilkan daftar file yang berubah bersama dengan file yang ingin di tambahkan atau di-commit. Gunakan:
exmp : git status

git push
git push adalah perintah git dasar lainnya. Push akan mengirimkan perubahan ke master branch dari remote repository yang berhubungan dengan direktori kerja Anda. Misalnya:
exmp : git push origin master / git push

git checkout
Perintah git checkout bisa digunakan untuk membuat branch atau untuk berpindah diantaranya. Misalnya, perintah berikut ini akan membuat branch baru dan berpindah ke dalamnya:
exmp : command git checkout -b <nama-branch>
Untuk berpindah dari branch satu ke lainnya, gunakan:
git checkout <branch-name>

git remote
Perintah git remote akan membuat user terhubung ke remote repository. Perintah berikut ini akan menampilkan repository yang sedang dikonfigurasi:
exmp : git remote -v

Perintah ini membuat user bisa menghubungkan repository lokal ke remote server:
git remote add origin <93.188.160.58>

git branch
Perintah git branch bisa digunakan untuk me-list, membuat atau menghapus branch. Untuk menampilkan semua branch yang ada di repository, gunakan:
exmp : git branch
Untuk menghapus branch:
git branch -d <branch-name>

git pull
Untuk menggabungkan semua perubahan yang ada di remote repository ke direktori lokal, gunakan perintah pull:
exmp : git pull

git merge
Perintah merge digunakan untuk menggabungkan sebuah branch ke branch aktif. Gunakan:
exmp : git merge <nama-branch>

git diff
Perintah git diff digunakan untuk menampilkan conflicts. Untuk melihat conflicts dengan file dasar, gunakan:
exmp : git diff --base <nama-file>

Perintah berikut digunakan untuk menampilkan conflicts diantara branch yang akan di-merge:
exmp : git diff <source-branch> <target-branch>
Untuk menampilkan semau conflict yang ada, gunakan:
exmp : git diff

git tag
Tagging digunakan untuk menandai commits tertentu. Contohnya:
exmp : git tag 1.1.0 <insert-commitID-here>

git log
Dengan menjalankan peritah ini akan menampilkan daftar commits yang ada di branch beserta detail-nya. Contoh outputnya adalah:
commit 15f4b6c44b3c8344caasdac9e4be13246e21sadw Author: Alex Hunter <alexh@gmail.com> Date: Mon Oct 1 12:56:29 2016 -0600
exmp : git reset
Untuk me-reset index dan bekerja dengan kondisi commit paling baru, gunakan perintah git reset:
exmp :  git reset --hard HEAD

git rm
Gunakan perintah ini untuk menghapus file dari index dan direktori kerja. Contohnya:
exmp : git rm filename.txt

git stash
Mungkin inilah salah satu perintah dasar git yang jarang digunakan orang, yang bisa membantu menyimpan perubahan yang tidak langsung di-commit, namun hanya sementara. Contoh:
exmp : git stash

git show
Untuk menampilkan informasi tentang object pada git, gunakan git show:
exmp :  git show

git fetch
Perintah ini digunakan untuk menampilkan semua object dari remote repository yang tidak berada di direktori kerja lokal. Contohnya:
exmp : git fetch origin

git ls-tree
Untuk menampilkan susunan object berdasarkan nama dan mode setiap item, dan nilai blob SHA-1, gunakan perintah git ls-tree. Contohnya:
exmp : git ls-tree HEAD

git cat-file
Menggunakan nilai SHA-1, menampilkan tipe object dengan menggunakan perintah git cat-file. Contohnya:
exmp : git cat-file –p d670460b4b4aece5915caf5c68d12f560a9fe3e4

git prep
git prep mengizinkan pengguna mencari frase dan/atau kata yang berada di dalam direktori. Contohnya, untuk mencari www.hostinger.co.id di dalam semua file, gunakan:
exmp : git grep "www.hostinger.co.id"

gitk
gitk adalah tampilan grafis dari repository lokal yang bisa dipanggil dengan menjalankan perintah:
exmp : gitk

git instaweb
Dengan perintah git instaweb, web server bisa dijalan berdampingan dengan repository lokal. Nantinya web browser akan langsung diarahkan ke server tersebut. Contohnya:
exmp : git instaweb –httpd=webrick 

git gc
Untuk mengoptimasi repository melalui garbage collection, yang akan membersihkan file yang tidak dibutuhkan dan mengoptimasinya, gunakan:
exmp : git gc

git archive
Perintah git archive memungkinkan user membuat file zip atau tar yang mengandung susunan repository. Contohnya:
exmp : git archive --format=tar master

git prune
Melalui perintah git prune, object yang tidak memiliki incoming pointers akan dihapus. Gunakan:
exmp : git prune

git fsck
Untuk membuat pengecekan keseluruhan dari file system git, gunakan perintah git fsck. Object yang corrupt akan dikenali:
exmp : git fsck

git rebase
Perintah ini digunakan untuk menerapkan ulang commit di branch yang lain. Contohnya:
exmp : git rebase master




-------------------git remote https-------------------

1. git config --global user.name farchanmuzaki
   git config --global user.email farchanmuzaki19@gmail.com //adalah konfigurasi agar semua perintah sesuai
                                       			      dengan keinginan pengguna

2. git clone https://www.farchanmuzaki.github.io //Perintah git clone digunakan untuk checkout repositori. 
						   Jia repositori berada di remove server

2. ketik cd farchanmuzaki.github.io/ //masuk folder yg sudah kita clone

3. git remote //untuk melihat nama remote


4. git remote -v //untuk melihat remote lebih detail

5. git status //untuk melihat setatus

6. alias graph="git log --all --decorate --oneline --graph"// untuk mengubah alias dan 
melihat dengan perintah graph

7. buatlah perubahan dengan menambahkan atau mengedit sebuah file.html/css/yg lain

8. kemudian ketikan git status //untuk melihat setatus setiap perubahan index

9. kemudian ketik git add . //untuk memindahkan dari staging hasil dari menambahkan 
			      sebuah perubahan atau penambahan index

10. kemudian ketikan git commit // Perintah git commit digunakan untuk melakukan commit 
				   pada perubahan ke head. Ingat bahwa perubahan apapun 
				   yang di-commit tidak akan langsung ke remote repository

11. kemudian ketikan git push //Push akan mengirimkan perubahan ke master branch dari 
				remote repository yang berhubungan dengan direktori kerja Anda.

10. maka akan ada perubahan dari repo lokal dan remot secara up to date

11. cek pada repo github.



